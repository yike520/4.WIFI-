C51 COMPILER V9.00   WSP8266_AP·½Ê½Ï_WIFIÒ£¿Ø³ÌÐò                                          03/14/2021 21:14:28 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE WSP8266_AP·½Ê½Ï_WIFIÒ£¿Ø³ÌÐò
OBJECT MODULE PLACED IN WSP8266_AP·½Ê½ÏÂWIFIÒ£¿Ø³ÌÐò.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE WSP8266_AP·½Ê½ÏÂWIFIÒ£¿Ø³ÌÐò.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEB
                    -UG OBJECTEXTEND TABS(2)

line level    source

   1          /********************************************************************/ 
   2          #include <REGX51.H>
   3          #define uint unsigned int 
   4          #define uchar unsigned char   
   5          sbit LED0=P2^0;   //ºìµÆ
   6          sbit LED1=P2^3;   //»ÆµÆ
   7          sbit LED2=P2^6;     //ÂÌµÆ
   8          
   9          /*****************Ïà¹Ø±äÁ¿**************/ 
  10          uchar Receive,i,qj,yz,zz,ht;                              
  11          uint n;  
  12          uchar Recive_table[40];     //ÓÃÓÚ½ÓÊÕwifiÄ£¿é·´À¡µ½MCUÉÏµÄÊý¾Ý  
  13          
  14          /******************************************************************* 
  15          Ãû³Æ£ºÑÓÊ±º¯Êý  ×÷ÓÃ£ººÁÃë¼¶ÑÓÊ±£¬Î¢Ãî¼¶ÑÓÊ±º¯Êý£¬ÎªÊý¾ÝÊÕ·¢Íê³É×÷µÈ´ý.......  
  16          ********************************************************************/ 
  17          void ms_delay(uint t) 
  18          {  
  19   1        uint i,j;  
  20   1        for(i=t;i>0;i--)   
  21   1        for(j=110;j>0;j--); 
  22   1      }   
  23          
  24          void us_delay(uchar t) 
  25          {  
  26   1        while(t--); 
  27   1      }         
  28          
  29          void Uart_Init()        //Ê¹ÓÃ¶¨Ê±Æ÷1×÷Îª²¨ÌØÂÊ·¢ÉúÆ÷£¨STC89C52¡¢STC89C51¡¢AT89C51µÈ¾ù¿É£© 
  30          {  
  31   1          TMOD = 0x20;
  32   1          SCON = 0x50;        //ÉèÖÃ´®ÐÐ·½Ê½
  33   1          TH1 = 0xFD;         //²¨ÌØÂÊ9600
  34   1          TL1 = TH1;
  35   1          PCON = 0x00;
  36   1          EA = 1;           //×ÜÖÐ¶Ï´ò¿ª 
  37   1          ES = 1;           //¿ª´®¿ÚÖÐ¶Ï  
  38   1          TR1 = 1;          //Æô¶¯¶¨Ê±Æ÷1
  39   1      } 
  40          
  41          /******************************************************************** 
  42          Ãû³Æ£º´®¿Ú·¢ËÍº¯Êý  ¹¦ÄÜ£ºMCUÏòÎÞÏßWIFIÄ£¿éESP8266·¢ËÍÊý¾Ý  
  43          ********************************************************************/ 
  44          void Send_Uart(uchar value) 
  45          {  
  46   1        ES=0;             //¹Ø±Õ´®¿ÚÖÐ¶Ï  
  47   1        TI=0;             //Çå·¢ËÍÍê±ÏÖÐ¶ÏÇëÇó±êÖ¾Î»   
  48   1        SBUF=value;         //·¢ËÍ  
  49   1        while(TI==0);         //µÈ´ý·¢ËÍÍê±Ï   
  50   1        TI=0;             //Çå·¢ËÍÍê±ÏÖÐ¶ÏÇëÇó±êÖ¾Î»   
  51   1        ES=1;             //ÔÊÐí´®¿ÚÖÐ¶Ï  
  52   1      }  
  53          
  54          /******************************************************************** 
C51 COMPILER V9.00   WSP8266_AP·½Ê½Ï_WIFIÒ£¿Ø³ÌÐò                                          03/14/2021 21:14:28 PAGE 2   

  55          Ãû³Æ£ºWIFIÄ£¿éÉèÖÃº¯Êý  ×÷ÓÃ: Æô¶¯Ä£¿é£¬ÒÔ±ã¿ÉÒÔÊµÏÖÎÞÏß½ÓÈëºÍ¿ØÖÆ  
  56          ********************************************************************/ 
  57          
  58          void ESP8266_Set(uchar *puf)  // Êý×éÖ¸Õë*pufÖ¸Ïò×Ö·û´®Êý×é                
  59          {    
  60   1        while(*puf!='\0')       //Óöµ½¿Õ¸ñÌø³öÑ­»·  
  61   1        {   
  62   2          Send_Uart(*puf);      //ÏòWIFIÄ£¿é·¢ËÍ¿ØÖÆÖ¸Áî¡£   
  63   2          us_delay(5);   
  64   2          puf++;    
  65   2        }  
  66   1        us_delay(5);  
  67   1        Send_Uart('\r');      //»Ø³µ  
  68   1        us_delay(5);  
  69   1        Send_Uart('\n');        //»»ÐÐ  
  70   1      } 
  71          
  72          /******************************************************************** 
  73          Ãû³Æ£ºÖ÷º¯Êý  ×÷ÓÃ£º³ÌÐòµÄÖ´ÐÐÈë¿Ú  
  74          ********************************************************************/ 
  75          
  76          void main() 
  77          {   
  78   1        Uart_Init();                      //²¨ÌØÂÊ·¢ÉúÆ÷ 
  79   1        ms_delay(2000);
  80   1        ESP8266_Set("AT+CWMODE=2");               //ÉèÖÃÂ·ÓÉÆ÷Ä£Ê½1 station,Ä£Ê½2 AP,Ä£Ê½3 station+AP»ìºÏÄ£Ê½   
  81   1        ms_delay(2000);
  82   1      //  ESP8266_Set("AT+RST");                  //ÖØÐÂÆô¶¯wifiÄ£¿é            
  83   1      //  ms_delay(2000);
  84   1        ESP8266_Set("AT+CWSAP=\"wifi_yuan\",\"123456789\",11,4");   //AT+CWSAP="wifi_yuan","123456789",11,4  ÉèÖÃ
             -Ä£¿éSSID:WIFI, PWD:ÃÜÂë ¼°°²È«ÀàÐÍ¼ÓÃÜÄ£Ê½£¨WPA2-PSK£© 
  85   1        ms_delay(2000);
  86   1        ESP8266_Set("AT+CIPMUX=1");               //¿ªÆô¶àÁ¬½ÓÄ£Ê½£¬ÔÊÐí¶à¸ö¸÷¿Í»§¶Ë½ÓÈë 
  87   1        ms_delay(2000);
  88   1        ESP8266_Set("AT+CIPSERVER=1,5000");           //Æô¶¯TCP/IP ÊµÏÖ»ùÓÚÍøÂç//¿ØÖÆ   ESP8266_Set("AT+CIPSERVER=1,50
             -00");  
  89   1        ms_delay(2000);
  90   1        ESP8266_Set("AT+CIPSTO=0");               //ÓÀÔ¶²»³¬Ê±
  91   1        ES=1;                               //ÔÊÐí´®¿ÚÖÐ¶Ï    
  92   1        qj=1;
  93   1        zz=1;
  94   1        yz=1;
  95   1        ht=1;
  96   1        LED0=1;
  97   1        LED1=1;
  98   1        LED2=1;
  99   1        while(1)   
 100   1        {    
 101   2          if((Recive_table[0]=='+')&&(Recive_table[1]=='I')&&(Recive_table[2]=='P'))//MCU½ÓÊÕµ½µÄÊý¾ÝÎª+IPDÊ±½øÈëÅ
             -Ð¶Ï¿ØÖÆ0\1À´Ê¹Ð¡µÆÁÁÓëÃð    
 102   2          {           
 103   3            if((Recive_table[9]=='G')&&(Recive_table[10]=='P'))            
 104   3            {      
 105   4              if(Recive_table[15]=='0')      
 106   4              {       
 107   5                LED0=0;       //ºìµÆÁÁ        
 108   5              }                                
 109   4              else 
 110   4              if (Recive_table[15]=='1')      
 111   4              {              
 112   5                LED0=1;       //ºìµÆÃð
 113   5              } 
C51 COMPILER V9.00   WSP8266_AP·½Ê½Ï_WIFIÒ£¿Ø³ÌÐò                                          03/14/2021 21:14:28 PAGE 3   

 114   4              else 
 115   4              if (Recive_table[15]=='2')      
 116   4              {              
 117   5                          LED1=0;            //»ÆµÆÁÁ           
 118   5              } 
 119   4              else 
 120   4              if (Recive_table[15]=='3')      
 121   4              {              
 122   5                        LED1=1;        //»ÆµÆÃð
 123   5              }
 124   4              else 
 125   4              if (Recive_table[15]=='4')      
 126   4              {              
 127   5                        LED2=0;           //ÂÌµÆÁÁ
 128   5              }  
 129   4              else 
 130   4              if (Recive_table[15]=='5')      
 131   4              {              
 132   5                        LED2=1;           //ÂÌµÆÃð
 133   5              }                                         
 134   4            }  
 135   3          }
 136   2          }    
 137   1      }    
 138          
 139          /*********************************************************************  
 140          Ãû³Æ£º´®ÐÐÍ¨Ñ¶ÖÐ¶Ï  ×÷ÓÃ£º·¢ËÍ»ò½ÓÊÕ½áÊøºó½øÈë¸Ãº¯Êý£¬¶ÔÏàÓ¦µÄ±êÖ¾Î»Èí¼þÇå0£¬ÊµÏÖÄ£¿é¶ÔÊý¾ÝÕý³£µÄÊÕ·¢¡£  
 141          ********************************************************************/ 
 142          
 143          void Uart_Interrupt() interrupt 4         
 144          {    
 145   1        static uchar i=0;  
 146   1        if(RI==1)  
 147   1        {   
 148   2          RI=0;   
 149   2          Receive=SBUF;                   //MCU½ÓÊÕwifiÄ£¿é·´À¡»ØÀ´µÄÊý¾Ý       
 150   2          Recive_table[i]=Receive;   
 151   2          if((Recive_table[i]=='\n'))
 152   2          {        
 153   3            i=0;
 154   3          }    
 155   2          else i++;                     //Óöµ½»»ÐÐ ÖØÐÂ×°Öµ  
 156   2        }   
 157   1        else TI=0;   
 158   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    317    ----
   CONSTANT SIZE    =     94    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     49    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
